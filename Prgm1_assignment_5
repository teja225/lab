#Insert a node at the end of a linked list    
class Node:    
  def __init__(self,data):    
    self.data = data;    
    self.next = None;    
     
class CreateList:        
  def __init__(self):    
    self.head = Node(None);    
    self.tail = Node(None);    
    self.head.next = self.tail;    
    self.tail.next = self.head;    
        
      
  def addAtEnd(self,data):    
    newNode = Node(data);    
    if self.head.data is None:        
        self.head = newNode;    
        self.tail = newNode;    
        newNode.next = self.head;    
    else:    
        self.tail.next = newNode;      
        self.tail = newNode;    
        self.tail.next = self.head;    
        
  def display(self):    
    current = self.head;    
    if self.head is None:    
      print("List is empty");    
      return;    
    else:    
        print("Adding nodes to the end of the list: ");        
        print(current.data),    
        while(current.next != self.head):    
            current = current.next;    
            print(current.data),    
        print("\n");    
     
class CircularLinkedList:    
    cl = CreateList();        
    cl.addAtEnd(1);    
    cl.display();        
    cl.addAtEnd(2);    
    cl.display();        
    cl.addAtEnd(3);    
    cl.display();        
    cl.addAtEnd(4);    
    cl.display();
Output:
Adding nodes to the end of the list: 
1


Adding nodes to the end of the list: 
1
2


Adding nodes to the end of the list: 
1
2
3


Adding nodes to the end of the list: 
1
2
3
4
